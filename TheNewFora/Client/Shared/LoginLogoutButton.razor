@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthStateProvider
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<AuthorizeView>
    <NotAuthorized>
        <button @onclick="Login">Login</button>
    </NotAuthorized>
    <Authorized>
            <button @onclick="Logout">Logout</button>
    </Authorized>
</AuthorizeView>

@code {

    private void Login()
    {
        NavigationManager.NavigateTo("login");   
    }
    private async void Logout()
    {
        if (!await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to log out?"))
            return;

        await LocalStorage.RemoveItemAsync("token");
        await AuthStateProvider.GetAuthenticationStateAsync();

        // Passing true here force reloads the app
        NavigationManager.NavigateTo("", true);
    }
}
